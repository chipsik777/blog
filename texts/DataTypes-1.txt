Selivanova Emiliia.

Data types.

Типізація даних РНР є  слабкою, що в свою чергу дозволяє не вимагати суворого визначення типу змінних при їх оголошенні. У ході виконання програми тип змінної може бути змінений неявним чином без спеціальних перетворень. Псевдотипи - це умовні позначення одного або декількох типів. В основному вони використовуються спільно з функціями і методами. Наприклад, mixed - будь-який тип, number - може зберігати значення типу integer або double. Ключове слово void означає відсутність змінної. Кілька типів можуть бути розділені вертикальною лінією, що аналогічно логічній операції «або».

String / Рядок 

Рядок - це послідовність символів, якою може бути будь який текст у подвійних або одинарних  лапках.

Подвійні лапки ("...") дозволяють замість змінних РНР підставляти їх значення. Така підстановка називається інтерполяцією. Змінні в одинарних лапках залишаються постійними. Це пов'язано з мовами, зо мають динамічну типізацію. Даний тип мов програмування в свою чергу ділиться на дві групи:
– строго типізовані (у цих мовах веб програмування суворо обмежені операції з різнотипними даними, наприклад додавання цілого числа і рядка);
– слабо типізовані (у таких мовах операції з різнотипними даними можливі).

Всередині подвійних лапок – відбувається інтерпретація змінних, в результаті чого на виході ми отримуємо їх значення;
Усередині одинарних лапок – змінні не інтерпретуються, тобто рядок пишеться як є. Значення, укладене у зворотні лапки (
...
), сприймається як системна команда.

Оголосити рядок можна також за допомогою оператора <<<, який ще називають вбудованим документом (hеrе-документ). Відразу після цієї послідовності розміщується мітка, кінець оператора позначається повторним входженням мітки.

Крім звичайних символів їснує список службових символів. Іноді виникає ситуація, коли на екран треба вивести сам службовий символ так, щоб він не інтерпретувався. Для цього використовують операцію екранування – додавання перед символом зворотної косої лінії – \.

У 32-бітних системах і PHP версій менше 7, рядки не можуть бути більшими за 2 Гб (2147483647 байт). У PHP 7.0.0, на 64-бітних платформах немає будь-яких досяжних обмежень для довжини рядка.

Integer / Ціле число

Цілочисельний тип даних – це недесяткове число від -2 147 483 648 до 2 147 483 647, тобто змінна типу int займає в пам’яті 32 біта. Якщо розрядність системи становить 64 біта, а не 32, діапазон можливих значень полягає від -9 223 372 036 854 775 808 до 9 223 372 036 854 775 807.  Якщо змінна отримує числове значення поза цим діапазоном, то вона трактується як змінна типу float.

Правила для цілих чисел:
- Ціле число повинно мати принаймні одну цифру;
- Ціле число не повинно мати десяткової коми;
- Ціле число може бути позитивним або негативним;
- Цілі числа можна вказати у: десятковій (основа 10), шістнадцятковій (основа 16), вісімковій (основа 8) або двійковій (основа 2) системі запису.

Шаблони чисел для інших систем:

шістнадцяткові : 0[xX][0-9a-fA-F];

вісімкові: 0[0-7];

двійкові: 0b[01].

Float (Double) / Дійсні числа

Float (число з плаваючою комою) – це число з десятковою комою або число в експоненціальній формі.Розмір числа із плаваючою точкою залежить від платформи. Максимально можливе значення, як правило, становить 1.8 * ¹⁰³⁰⁸ з точністю близько 14 десяткових цифр. 

Boolean / Булеві (Логічні значення)

Boolean / Булеве (Логічне значення) представляє два можливі стани: TRUE або FALSE (ІСТИНА або БРЕХНЯ). Константи True і False не залежать від регістру, але за стандартами написання коду PSR-2, рекомендується писати малими літерами: true і false.

Array / Масив

Array / Масив зберігає кілька значень в одній змінній.

У php існує 3 види масивів:
– Індексовані;
– Асоціативні;
– Змішані.

У свою чергу будь-який такий масив може бути одновимірним або багатовимірним. Масив, який в якості своїх елементів містить інші масиви, називається багатовимірним масивом.

Object / Об’єкт

Класи та об’єкти є двома основними аспектами об’єктно-орієнтованого програмування.
Клас — це шаблон для об’єктів, а об’єкт — це екземпляр класу.
Коли окремі об’єкти створюються, вони успадковують усі властивості та поведінку від класу, але кожен об’єкт матиме різні значення властивостей.

Значення NULL / Нуль

Null — це спеціальний тип даних, який може мати лише одне значення: NULL.
Змінна типу даних NULL — це змінна, якій не присвоєно значення.
Якщо змінну створено без значення, їй автоматично присвоюється значення NULL. 

У логічний тип False автоматично приводяться всі значення рівні нулю "0", порожній рядок "", рядок, що містить "0", порожні масиви та об’єкти, а також null, решта змінних розглядаються як True.При перетворенні логічного типу до рядка, True перетворюється на "1", а False на порожній рядок "". Перетворення логічного типу до числа призводить до перетворення True на 1, а False на 0.

Для знищення змінної можна користуватися конструкцією Unset. У параметрах конструкції вказується або одна, або кілька розділених комами змінних, які підлягають знищенню. Вони отримають значення  Null.

Для перевірки існування змінної використовується конструкція Isset, в параметрах якої вказується або одна, або кілька розділених комами змінних.

Resource / Ресурс

Спеціальний тип ресурсу не є фактичним типом даних. Це зберігання посилань на функції та ресурси, зовнішні для мови програмування.
Поширеним прикладом використання типу даних ресурсу є виклик бази даних.

Callable | Callback

Деякі функції РНР можуть приймати в якості аргументів інші функції, які називаються функціями зворотного виклику. Змінні даного типу містять посилання на такі функції.

Явне приведення типів

У РНР можна явно перетворити змінну на один із підтримуваних типів. Одним із варіантів перетворення полягає використання круглих дужок. У них вказується тип, до якого якого слід привести змінну. Всі можливі варіанти використання оператора круглих дужок: (int|integer) – приведення до цілого типу int; (bool|boolean) – приведення до логічного типу boolean; (float|double|real) - приведення до дійсного типу double; (string) – приведення до рядкового типу string; (array) – приведення до масиву; (object) – приведення до об’єкта. 

РНР надає ряд спеціальних функцій, що дозволяють здійснити перетворення типу змінної.

Функція Settype перетворює тип змінної на потрібний. Для цього в параметрах вказується назва змінної та новий тип даних, який може приймати одне з наступних значень: "boolean" або "bool", "integer" або "int", "float" або "double", "string", "array", "object", "null". Функція повертає True, якщо перетворення було успішно здійснено, і False інакше.

Динамічні змінні

У PHP можна створювати змінні довільного типу, для цього необхідно використовувати подвійний символ $$. Іноді назву змінної неможливо визначити заздалегідь, і вона має визначатися у міру виконання скрипта. В цьому випадку вдаються до динамічних змінних.Значення змінної, що настає після першого знака $, сприймається як ім’я нової змінної.

Ще один спосіб створення динамічних змінних полягає у використанні функції Eval. Вона приймає як параметр рядок з РНР-кодом і виконує його.

Посилання на змінні

Для створення посилань використовується оператор &.
Інші типи даних 
Символ / Char

Він використовується для зберігання однієї літери, цифри, знака пунктуації, символу або пробілу.

Перерахований тип / Enum

Він містить невеликий набір попередньо визначених унікальних значень (також відомих як елементи або перечислювачі), які можна порівняти та призначити змінній перерахованого типу даних.
Значення перерахованого типу можуть бути текстовими або числовими. Насправді логічний тип даних є попередньо визначеним переліком значень true і false.
За допомогою перерахованого типу значення можна зберігати та отримувати як числові індекси (0, 1, 2) так і рядки.

Дата

Зазвичай зберігає дату у форматі РРРР-ММ-ДД (синтаксис ISO 8601).

Час

Зберігає час у форматі гг:хх:сс. Окрім часу доби, його також можна використовувати для збереження часу, що минув, або інтервалу між двома подіями, який може перевищувати 24 години. Наприклад, час, що минув з моменту події, може складати 72+ години (72:00:59).

Дата, час

Зберігає значення, що містить і дату, і час разом у форматі РРРР-ММ-ДД гг:хх:сс.

Мітка часу

Мітка часу, як правило, представлена ​​в часі Unix , представляє кількість секунд, що минули з опівночі (00:00:00 UTC), 1 січня 1970 року.
Зазвичай він використовується комп’ютерними системами для реєстрації точної дати й часу події, аж до кількості секунд, у форматі, на який не впливають часові пояси. Тому, на відміну від datetime, timestamp залишається незмінним незалежно від географічного розташування.
